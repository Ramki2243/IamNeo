{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k rama krishnan\\\\OneDrive\\\\Documents\\\\googlekeep2\\\\googlekeepclone\\\\src\\\\Context\\\\DataProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nconst DataProvider = props => {\n  _s();\n  const [notes, setNotes] = useState([]);\n\n  // Load data from local storage on component mount\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(\"notes\");\n    if (savedNotes) {\n      setNotes(JSON.parse(savedNotes));\n    }\n  }, []);\n\n  // Save data to local storage whenever notes change\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  const addNote = newNote => {\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  };\n  const deleteNote = id => {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"eI97U74WWn7LZv8elnKHdI/J0uk=\");\n_c = DataProvider;\nexport default DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","jsxDEV","_jsxDEV","DataContext","DataProvider","props","_s","notes","setNotes","savedNotes","localStorage","getItem","JSON","parse","setItem","stringify","addNote","newNote","prevNotes","deleteNote","id","filter","note","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/k rama krishnan/OneDrive/Documents/googlekeep2/googlekeepclone/src/Context/DataProvider.js"],"sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\n\nexport const DataContext = createContext();\n\nconst DataProvider = (props) => {\n  const [notes, setNotes] = useState([]);\n\n  // Load data from local storage on component mount\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(\"notes\");\n    if (savedNotes) {\n      setNotes(JSON.parse(savedNotes));\n    }\n  }, []);\n\n  // Save data to local storage whenever notes change\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (newNote) => {\n    setNotes((prevNotes) => [...prevNotes, newNote]);\n  };\n\n  const deleteNote = (id) => {\n    setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\n  };\n\n  return (\n    <DataContext.Provider value={{ notes, addNote, deleteNote }}>\n      {props.children}\n    </DataContext.Provider>\n  );\n};\n\nexport default DataProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,CAAC;AAE1C,MAAMI,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC;IAClC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAV,SAAS,CAAC,MAAM;IACdW,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMS,OAAO,GAAIC,OAAO,IAAK;IAC3BT,QAAQ,CAAEU,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,UAAU,GAAIC,EAAE,IAAK;IACzBZ,QAAQ,CAAEU,SAAS,IAAKA,SAAS,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC,CAAC;EACrE,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,KAAK;MAAES,OAAO;MAAEG;IAAW,CAAE;IAAAM,QAAA,EACzDpB,KAAK,CAACoB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACvB,EAAA,CA7BIF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}