{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k rama krishnan\\\\OneDrive\\\\Documents\\\\googlekeep2\\\\googlekeepclone\\\\src\\\\Components\\\\AddNote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useContext } from \"react\";\nimport { Box, Container as MuiContainer, ClickAwayListener, TextField } from \"@mui/material\";\nimport { v4 as uuid } from \"uuid\";\nimport { DataContext } from \"../Context/DataProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst note = {\n  id: \"\",\n  title: \"\",\n  text: \"\"\n};\nconst AddNote = () => {\n  _s();\n  const [showTextField, setShowTextField] = useState(false);\n  const [addNote, setAddNote] = useState({\n    ...note,\n    id: uuid()\n  });\n  const {\n    setNotes\n  } = useContext(DataContext);\n  const containerRef = useRef();\n  const onTextChange = e => {\n    let changedNote = {\n      ...addNote,\n      [e.target.name]: e.target.value\n    };\n    setAddNote(changedNote);\n  };\n  const [isExpanded, setExpanded] = useState(false);\n  function handelExpanded() {\n    setExpanded(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: () => {\n        setShowTextField(false);\n        containerRef.current.style.minHeight = \"30px\";\n        setAddNote({\n          ...note,\n          id: uuid()\n        });\n        if (addNote.title || addNote.text) {\n          setNotes(prevArr => [addNote, ...prevArr]);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [isExpanded && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: addNote.title,\n        name: \"title\",\n        placeholder: \"Title\",\n        onChange: e => onTextChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"notes\",\n          placeholder: \"Take a note...\",\n          onChange: e => onTextChange(e),\n          value: addNote.text,\n          onClick: handelExpanded,\n          rows: isExpanded ? 3 : 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNote, \"VrDZYZDZGsi9JBHW5UvVAhz/lRg=\");\n_c = AddNote;\nexport default AddNote;\nvar _c;\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"names":["React","useState","useRef","useContext","Box","Container","MuiContainer","ClickAwayListener","TextField","v4","uuid","DataContext","jsxDEV","_jsxDEV","note","id","title","text","AddNote","_s","showTextField","setShowTextField","addNote","setAddNote","setNotes","containerRef","onTextChange","e","changedNote","target","name","value","isExpanded","setExpanded","handelExpanded","children","onClickAway","current","style","minHeight","prevArr","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","rows","_c","$RefreshReg$"],"sources":["C:/Users/k rama krishnan/OneDrive/Documents/googlekeep2/googlekeepclone/src/Components/AddNote.jsx"],"sourcesContent":["import React, { useState, useRef, useContext } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Container as MuiContainer,\r\n  ClickAwayListener,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { DataContext } from \"../Context/DataProvider\";\r\n\r\nconst note = {\r\n  id: \"\",\r\n  title: \"\",\r\n  text: \"\",\r\n};\r\n\r\nconst AddNote = () => {\r\n\r\n  const [showTextField, setShowTextField] = useState(false);\r\n  const [addNote, setAddNote] = useState({ ...note, id: uuid() });\r\n\r\n  const { setNotes } = useContext(DataContext);\r\n\r\n  const containerRef = useRef();\r\n\r\n  const onTextChange = (e) => {\r\n    let changedNote = { ...addNote, [e.target.name]: e.target.value }\r\n    setAddNote(changedNote);\r\n  }\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  function handelExpanded() {\r\n    setExpanded(true);\r\n  }   \r\n  return (\r\n    <div>\r\n      <ClickAwayListener\r\n        onClickAway={() => {\r\n          setShowTextField(false);\r\n          containerRef.current.style.minHeight = \"30px\";\r\n\r\n          setAddNote({ ...note, id: uuid() });\r\n          if (addNote.title || addNote.text) {\r\n            setNotes((prevArr) => [addNote, ...prevArr]);\r\n          }\r\n        }}\r\n      ></ClickAwayListener>\r\n      <form>\r\n        {isExpanded && (\r\n          <input\r\n            type=\"text\"\r\n            value={addNote.title}\r\n            name=\"title\"\r\n            placeholder=\"Title\"\r\n            onChange={(e) => onTextChange(e)}\r\n          />\r\n        )}\r\n        <p>\r\n          <textarea\r\n            name=\"notes\"\r\n            placeholder=\"Take a note...\"\r\n            onChange={(e) => onTextChange(e)}\r\n            value={addNote.text}\r\n            onClick={handelExpanded}\r\n            rows={isExpanded ? 3 : 1}\r\n          ></textarea>\r\n        </p>\r\n        {/* <button onClick={submit}>ADD</button> */}\r\n      </form>\r\n      \r\n    </div>\r\n  )\r\n}\r\n    \r\n  export default AddNote;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}