{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\k rama krishnan\\\\OneDrive\\\\Documents\\\\googlekeep2\\\\googlekeepclone\\\\src\\\\Context\\\\DataProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nconst DataProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    const storedNotes = localStorage.getItem(\"notes\");\n    if (storedNotes) {\n      setNotes(JSON.parse(storedNotes));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n  const addNote = newNote => {\n    setNotes(prevNotes => [...prevNotes, newNote]);\n  };\n  const deleteNote = id => {\n    setNotes(prevNotes => prevNotes.filter((note, index) => index !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"eI97U74WWn7LZv8elnKHdI/J0uk=\");\n_c = DataProvider;\nexport default DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","DataContext","DataProvider","_ref","_s","children","notes","setNotes","storedNotes","localStorage","getItem","JSON","parse","setItem","stringify","addNote","newNote","prevNotes","deleteNote","id","filter","note","index","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/k rama krishnan/OneDrive/Documents/googlekeep2/googlekeepclone/src/Context/DataProvider.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nexport const DataContext = createContext();\n\nconst DataProvider = ({ children }) => {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    const storedNotes = localStorage.getItem(\"notes\");\n    if (storedNotes) {\n      setNotes(JSON.parse(storedNotes));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (newNote) => {\n    setNotes((prevNotes) => [...prevNotes, newNote]);\n  };\n\n  const deleteNote = (id) => {\n    setNotes((prevNotes) => prevNotes.filter((note, index) => index !== id));\n  };\n\n  return (\n    <DataContext.Provider value={{ notes, addNote, deleteNote }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport default DataProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,MAAMM,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAChC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,WAAW,EAAE;MACfD,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;EAENV,SAAS,CAAC,MAAM;IACdW,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,SAAS,CAACR,KAAK,CAAC,CAAC;EACtD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMS,OAAO,GAAIC,OAAO,IAAK;IAC3BT,QAAQ,CAAEU,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,UAAU,GAAIC,EAAE,IAAK;IACzBZ,QAAQ,CAAEU,SAAS,IAAKA,SAAS,CAACG,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKH,EAAE,CAAC,CAAC;EAC1E,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAElB,KAAK;MAAES,OAAO;MAAEG;IAAW,CAAE;IAAAb,QAAA,EACzDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CA3BIF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}